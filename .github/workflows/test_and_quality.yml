name: Test and Quality Check

on:
  push:

jobs:
  # Tests
  unittest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Export Python path
        run:
          export PYTHONPATH=home/runner/work/keyword_extractor/keyword_extractor/:home/runner/work/keyword_extractor/keyword_extractor/keyword_extractor/
      - name: Run unittests
        run: |
          python -m unittest discover test/tests/unit

  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install '.[test]'
      - name: Export Python path
        run:
          export PYTHONPATH=home/runner/work/keyword_extractor/keyword_extractor/:home/runner/work/keyword_extractor/keyword_extractor/keyword_extractor/
      - name: Coverage
        run: |
          coverage run --source=./src -m unittest discover ./test/tests/unit
          coverage report
          coverage xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # Quality checks
  black:
    runs-on: ubuntu-latest
    needs:
      - unittest
      - coverage
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install '.[quality]'
      - name: Export Python path
        run:
          export PYTHONPATH=home/runner/work/keyword_extractor/keyword_extractor/:home/runner/work/keyword_extractor/keyword_extractor/keyword_extractor/
      - name: Run black
        run: |
          black --check .

  flake8:
    runs-on: ubuntu-latest
    needs:
      - unittest
      - coverage
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install '.[quality]'
      - name: Export Python path
        run:
          export PYTHONPATH=home/runner/work/keyword_extractor/keyword_extractor/:home/runner/work/keyword_extractor/keyword_extractor/keyword_extractor/
      - name: Run flake8
        run: |
          flake8 --config ./.flake8

  mypy:
    runs-on: ubuntu-latest

    needs:
      - unittest
      - coverage
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install '.[quality]'
      - name: Export Python path
        run:
          export PYTHONPATH=home/runner/work/keyword_extractor/keyword_extractor/:home/runner/work/keyword_extractor/keyword_extractor/keyword_extractor/
      - name: Run MyPy
        run: |
           mypy ./src
        continue-on-error: true

  # Build
  # Release